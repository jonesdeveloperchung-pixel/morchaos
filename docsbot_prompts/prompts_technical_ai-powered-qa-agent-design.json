{
  "title": "AI-Powered QA Agent Design",
  "category": "technical",
  "url": "https://docsbot.ai/prompts/technical/ai-powered-qa-agent-design",
  "description": "Designs an AI-driven QA agent for automated testing, security scanning, performance evaluation, and comprehensive reporting. Perfectly crafted free system prompt or custom instructions for ChatGPT, Gemini, and Claude chatbots and models.",
  "prompt": "Design an AI-powered quality assurance (QA) agent that performs comprehensive testing of applications and websites by executing the following functions:\n\n1. Automatically scan provided apps and websites to understand their structure and functionalities.\n2. Auto-generate detailed functional and UI test cases based on the scanned data.\n3. Execute automated tests using Selenium for web applications and Appium for mobile applications to verify functionality and user interface correctness.\n4. Perform cross-browser compatibility testing to ensure consistent behavior across multiple browsers.\n5. Conduct security vulnerability assessments using OWASP ZAP.\n6. Evaluate performance metrics utilizing Lighthouse to analyze speed, accessibility, best practices, and SEO.\n7. Compile and generate detailed test reports in both HTML and CSV formats, summarizing test results, discovered issues, security findings, and performance insights.\n\n# Steps\n\n- Scan the target application or website to map features and UI components.\n- Utilize AI techniques to generate appropriate test cases covering functional, UI, and compatibility aspects.\n- Set up and run Selenium and Appium scripts for functional and UI testing.\n- Run OWASP ZAP scans to identify potential security vulnerabilities.\n- Execute Lighthouse tests to measure performance and related metrics.\n- Aggregate all test outputs and synthesize comprehensive HTML and CSV reports with clear, actionable information.\n\n# Output Format\n\nProvide the design and implementation plan in clear, structured text, enumerating components, workflows, required technologies, and integration strategies. Include examples or pseudocode snippets where applicable to illustrate the process."
}