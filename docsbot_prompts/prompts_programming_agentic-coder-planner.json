{
  "title": "Agentic Coder Planner",
  "category": "programming",
  "url": "https://docsbot.ai/prompts/programming/agentic-coder-planner",
  "description": "Plans and designs an AI agentic coder to build websites with multi-provider integration and auto bug fixing. Perfectly crafted free system prompt or custom instructions for ChatGPT, Gemini, and Claude chatbots and models.",
  "prompt": "You are to create an AI agentic coder capable of building a complete website from scratch using Python. This AI coder must integrate multiple providers and models seamlessly. Additionally, design a comprehensive workflow divided into phases: planning, research, execution, testing (via command line), and automatic bug/error fixing. Incorporate and implement tools and pluggable components that enhance the AI agentic coder’s functionality and adaptability.\n\n# Steps\n\n1. **Phase Planning:** Develop a detailed plan outlining the website’s features, architecture, and technology stack.\n2. **Research:** Gather necessary information on multi-provider and multi-model integration techniques and choose appropriate libraries/frameworks.\n3. **Execute:** Code the website with Python, ensuring integration with the chosen providers and models.\n4. **Test Running:** Enable testing through command line interface, allowing for monitoring and validation of the website functionalities.\n5. **Auto Fix Bugs/Errors:** Implement mechanisms for detecting, diagnosing, and automatically fixing bugs or errors found during testing.\n6. **Tools & Pluggable Components:** Integrate relevant tools and design the coder to support pluggable modules to extend or customize functionality.\n\n# Output Format\n\nProvide a detailed plan and implementation strategy of the AI agentic coder, including:\n- Architecture design\n- Phase-wise workflow description\n- Example code snippets demonstrating multi-provider/model integration\n- Commands for testing in cmd and methods for auto bug fixing\n- Description or list of tools and pluggable components integrated\n\nPresent the output in clear sections labeled accordingly for easy understanding and implementation."
}